name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.9', '3.10', '3.11']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Mambaforge
      uses: conda-incubator/setup-miniconda@v3
      with:
        miniforge-variant: Mambaforge
        miniforge-version: latest
        python-version: ${{ matrix.python-version }}
        activate-environment: myria3d
        environment-file: environment.yml
        use-mamba: true
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libgdal-dev \
          gdal-bin \
          libproj-dev \
          proj-data \
          proj-bin \
          libgeos-dev \
          libudunits2-dev
    
    - name: Verify installation
      shell: bash -el {0}
      run: |
        conda info
        conda list
        python --version
        python -c "import gdal; print('GDAL version:', gdal.__version__)"
        python -c "import pdal; print('PDAL imported successfully')"
        python -c "import laspy; print('Laspy imported successfully')"
        python -c "import torch; print('PyTorch version:', torch.__version__)"
    
    - name: Install package in development mode
      shell: bash -el {0}
      run: |
        pip install -e .
    
    - name: Create basic test script
      run: |
        mkdir -p tests
        cat > tests/test_basic.py << 'EOF'
import pytest
import sys

def test_python_version():
    assert sys.version_info >= (3, 8)

def test_imports():
    import torch
    import lightning
    import laspy
    import pdal
    import hydra
    import numpy as np
    
    # Basic functionality
    x = torch.tensor([1, 2, 3])
    assert len(x) == 3
    
    y = np.array([1, 2, 3])
    assert len(y) == 3
    
    print("All imports successful")

if __name__ == "__main__":
    pytest.main([__file__, "-v"])
EOF
    
    - name: Run tests
      shell: bash -el {0}
      run: |
        python -m pytest tests/ -v --tb=short --disable-warnings

  code-coverage:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Mambaforge
      uses: conda-incubator/setup-miniconda@v3
      with:
        miniforge-variant: Mambaforge
        miniforge-version: latest
        python-version: '3.10'
        activate-environment: myria3d
        environment-file: environment.yml
        use-mamba: true
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgdal-dev gdal-bin libproj-dev proj-data proj-bin libgeos-dev
    
    - name: Install package and run coverage
      shell: bash -el {0}
      run: |
        pip install -e .
        python -m pytest tests/ --cov=src --cov-report=xml --cov-report=html
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: false